{"ast":null,"code":"var _jsxFileName = \"/Users/mo/Concordia-bootcamp/day39-ProjectSlingair/project-slingair/frontend/src/components/FlightContext.js\";\nimport React from \"react\";\nexport const FlightContext = React.createContext();\nconst initialState = {\n  flights: [],\n  status: \"loading\",\n  flightNumber: \"\"\n};\n\nfunction reducer(state, action) {\n  console.log(\"action\", action);\n\n  switch (action.type) {\n    case \"loadFlights\":\n      {\n        return { ...state,\n          status: \"loaded\",\n          flights: action.flights\n        };\n      }\n\n    case \"selectedFlight\":\n      {\n        return { ...state,\n          flightNumber: action.flightNumber\n        };\n      }\n  }\n}\n\nconsole.log(\"state test\", initialState);\nexport const FlightProvider = ({\n  children\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState); //Functions\n\n  const getAllFlights = data => {\n    dispatch({\n      type: \"loadFlights\",\n      flights: data\n    });\n  };\n\n  const updateFlightNumber = flightNumber => {\n    dispatch({\n      type: \"selectedFlight\",\n      flightNumber\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(FlightContext.Provider, {\n    value: {\n      state,\n      actions: {\n        getAllFlights,\n        updateFlightNumber\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mo/Concordia-bootcamp/day39-ProjectSlingair/project-slingair/frontend/src/components/FlightContext.js"],"names":["React","FlightContext","createContext","initialState","flights","status","flightNumber","reducer","state","action","console","log","type","FlightProvider","children","dispatch","useReducer","getAllFlights","data","updateFlightNumber","actions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGD,KAAK,CAACE,aAAN,EAAtB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE,SAFW;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;;AAMA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGJ,KADE;AAELH,UAAAA,MAAM,EAAE,QAFH;AAGLD,UAAAA,OAAO,EAAEK,MAAM,CAACL;AAHX,SAAP;AAKD;;AACD,SAAK,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGI,KADE;AAELF,UAAAA,YAAY,EAAEG,MAAM,CAACH;AAFhB,SAAP;AAID;AAbH;AAeD;;AACDI,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,YAA1B;AAEA,OAAO,MAAMU,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBf,KAAK,CAACgB,UAAN,CAAiBT,OAAjB,EAA0BJ,YAA1B,CAA1B,CAD8C,CAG9C;;AACA,QAAMc,aAAa,GAAIC,IAAD,IAAU;AAC9BH,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE,aAAR;AAAuBR,MAAAA,OAAO,EAAEc;AAAhC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIb,YAAD,IAAkB;AAC3CS,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE,gBAAR;AAA0BN,MAAAA;AAA1B,KAAD,CAAR;AACD,GAFD;;AAGA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAF;AAASY,MAAAA,OAAO,EAAE;AAAEH,QAAAA,aAAF;AAAiBE,QAAAA;AAAjB;AAAlB,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGL,QAHH,CADF;AAOD,CAlBM","sourcesContent":["import React from \"react\";\n\nexport const FlightContext = React.createContext();\n\nconst initialState = {\n  flights: [],\n  status: \"loading\",\n  flightNumber: \"\",\n};\n\nfunction reducer(state, action) {\n  console.log(\"action\", action);\n  switch (action.type) {\n    case \"loadFlights\": {\n      return {\n        ...state,\n        status: \"loaded\",\n        flights: action.flights,\n      };\n    }\n    case \"selectedFlight\": {\n      return {\n        ...state,\n        flightNumber: action.flightNumber,\n      };\n    }\n  }\n}\nconsole.log(\"state test\", initialState);\n\nexport const FlightProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  //Functions\n  const getAllFlights = (data) => {\n    dispatch({ type: \"loadFlights\", flights: data });\n  };\n\n  const updateFlightNumber = (flightNumber) => {\n    dispatch({ type: \"selectedFlight\", flightNumber });\n  };\n  return (\n    <FlightContext.Provider\n      value={{ state, actions: { getAllFlights, updateFlightNumber } }}\n    >\n      {children}\n    </FlightContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}