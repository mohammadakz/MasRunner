{"ast":null,"code":"var _jsxFileName = \"/Users/mo/Concordia-bootcamp/day39-ProjectSlingair/project-slingair/frontend/src/components/FlightContext.js\";\nimport React from \"react\";\nexport const FlightContext = React.createContext();\nconst initialState = {\n  flights: [],\n  status: \"loading\",\n  flightNumber: \"\",\n  reservedSeat: \"\",\n  selectedSeat: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"loadFlights\":\n      {\n        return { ...state,\n          status: \"loaded\",\n          flights: action.flights\n        };\n      }\n\n    case \"selectedFlight\":\n      {\n        return { ...state,\n          status: \"flightSelected\",\n          flightNumber: action.data\n        };\n      }\n\n    case \"seatSelected\":\n      {\n        return { ...state,\n          status: \"seatSelected\",\n          selectedSeat: action.data\n        };\n      }\n  }\n}\n\nexport const FlightProvider = ({\n  children\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState); //Functions\n\n  const getAllFlights = data => {\n    dispatch({\n      type: \"loadFlights\",\n      flights: data\n    });\n  };\n\n  const updateFlightNumber = data => {\n    dispatch({\n      type: \"selectedFlight\",\n      data\n    });\n  };\n\n  const selectSeat = data => {\n    dispatch({\n      type: \"seatSelected\",\n      data\n    });\n  };\n\n  const completeReservation = data => {\n    dispatch({\n      type: \"completeReservation\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(FlightContext.Provider, {\n    value: {\n      state,\n      actions: {\n        getAllFlights,\n        updateFlightNumber,\n        selectSeat\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mo/Concordia-bootcamp/day39-ProjectSlingair/project-slingair/frontend/src/components/FlightContext.js"],"names":["React","FlightContext","createContext","initialState","flights","status","flightNumber","reservedSeat","selectedSeat","reducer","state","action","type","data","FlightProvider","children","dispatch","useReducer","getAllFlights","updateFlightNumber","selectSeat","completeReservation","actions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGD,KAAK,CAACE,aAAN,EAAtB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE,SAFW;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,YAAY,EAAE,EAJK;AAKnBC,EAAAA,YAAY,EAAE;AALK,CAArB;;AAQA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGF,KADE;AAELL,UAAAA,MAAM,EAAE,QAFH;AAGLD,UAAAA,OAAO,EAAEO,MAAM,CAACP;AAHX,SAAP;AAKD;;AACD,SAAK,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGM,KADE;AAELL,UAAAA,MAAM,EAAE,gBAFH;AAGLC,UAAAA,YAAY,EAAEK,MAAM,CAACE;AAHhB,SAAP;AAKD;;AACD,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGH,KADE;AAELL,UAAAA,MAAM,EAAE,cAFH;AAGLG,UAAAA,YAAY,EAAEG,MAAM,CAACE;AAHhB,SAAP;AAKD;AArBH;AAuBD;;AAED,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBhB,KAAK,CAACiB,UAAN,CAAiBR,OAAjB,EAA0BN,YAA1B,CAA1B,CAD8C,CAG9C;;AACA,QAAMe,aAAa,GAAIL,IAAD,IAAU;AAC9BG,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,aAAR;AAAuBR,MAAAA,OAAO,EAAES;AAAhC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMM,kBAAkB,GAAIN,IAAD,IAAU;AACnCG,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA;AAA1B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMO,UAAU,GAAIP,IAAD,IAAU;AAC3BG,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA;AAAxB,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMQ,mBAAmB,GAAIR,IAAD,IAAS;AACnCG,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACD,GAFD;;AAGA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,KADK;AAELY,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,aAAF;AAAiBC,QAAAA,kBAAjB;AAAqCC,QAAAA;AAArC;AAFJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGL,QANH,CADF;AAUD,CA7BM","sourcesContent":["import React from \"react\";\n\nexport const FlightContext = React.createContext();\n\nconst initialState = {\n  flights: [],\n  status: \"loading\",\n  flightNumber: \"\",\n  reservedSeat: \"\",\n  selectedSeat: [],\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"loadFlights\": {\n      return {\n        ...state,\n        status: \"loaded\",\n        flights: action.flights,\n      };\n    }\n    case \"selectedFlight\": {\n      return {\n        ...state,\n        status: \"flightSelected\",\n        flightNumber: action.data,\n      };\n    }\n    case \"seatSelected\": {\n      return {\n        ...state,\n        status: \"seatSelected\",\n        selectedSeat: action.data,\n      };\n    }\n  }\n}\n\nexport const FlightProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  //Functions\n  const getAllFlights = (data) => {\n    dispatch({ type: \"loadFlights\", flights: data });\n  };\n\n  const updateFlightNumber = (data) => {\n    dispatch({ type: \"selectedFlight\", data });\n  };\n\n  const selectSeat = (data) => {\n    dispatch({ type: \"seatSelected\", data });\n  };\n\n  const completeReservation = (data) =>{\n    dispatch({type: \"completeReservation\"})\n  }\n  return (\n    <FlightContext.Provider\n      value={{\n        state,\n        actions: { getAllFlights, updateFlightNumber, selectSeat },\n      }}\n    >\n      {children}\n    </FlightContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}