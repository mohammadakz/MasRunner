{"ast":null,"code":"var _jsxFileName = \"/Users/mo/Concordia-bootcamp/day39-ProjectSlingair/project-slingair/frontend/src/components/FlightContext.js\";\nimport React from \"react\";\nexport const FlightContext = React.createContext();\nconst initialState = {\n  allFlights: [],\n  status: \"loading\"\n};\n\nfunction reducer(state, action) {\n  console.log(\"action\", action);\n\n  switch (action.type) {\n    case \"loadAllFlights\":\n      {\n        return { ...state,\n          status: \"loaded\",\n          allFlights: action.data\n        };\n      }\n  }\n}\n\nexport const FlightProvider = ({\n  children\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState); //Functions\n\n  const getAllFlights = data => {\n    dispatch({\n      type: \"loadAllFlights\",\n      flightsName: data\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(FlightContext.Provider, {\n    value: {\n      state,\n      actions: {\n        getAllFlights\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mo/Concordia-bootcamp/day39-ProjectSlingair/project-slingair/frontend/src/components/FlightContext.js"],"names":["React","FlightContext","createContext","initialState","allFlights","status","reducer","state","action","console","log","type","data","FlightProvider","children","dispatch","useReducer","getAllFlights","flightsName","actions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGD,KAAK,CAACE,aAAN,EAAtB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGJ,KADE;AAELF,UAAAA,MAAM,EAAE,QAFH;AAGLD,UAAAA,UAAU,EAAEI,MAAM,CAACI;AAHd,SAAP;AAKD;AAPH;AASD;;AAED,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBf,KAAK,CAACgB,UAAN,CAAiBV,OAAjB,EAA0BH,YAA1B,CAA1B,CAD8C,CAG9C;;AACA,QAAMc,aAAa,GAAIL,IAAD,IAAU;AAC9BG,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,gBAAR;AAA0BO,MAAAA,WAAW,EAAEN;AAAvC,KAAD,CAAR;AACD,GAFD;;AAGA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAF;AAASY,MAAAA,OAAO,EAAE;AAAEF,QAAAA;AAAF;AAAlB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD,CAZM","sourcesContent":["import React from \"react\";\n\nexport const FlightContext = React.createContext();\n\nconst initialState = {\n  allFlights: [],\n  status: \"loading\",\n};\n\nfunction reducer(state, action) {\n  console.log(\"action\", action);\n  switch (action.type) {\n    case \"loadAllFlights\": {\n      return {\n        ...state,\n        status: \"loaded\",\n        allFlights: action.data,\n      };\n    }\n  }\n}\n\nexport const FlightProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  //Functions\n  const getAllFlights = (data) => {\n    dispatch({ type: \"loadAllFlights\", flightsName: data });\n  };\n  return (\n    <FlightContext.Provider value={{ state, actions: { getAllFlights } }}>\n      {children}\n    </FlightContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}