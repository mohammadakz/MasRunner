{"ast":null,"code":"var _jsxFileName = \"/Users/mo/Concordia-bootcamp/day39-ProjectSlingair/project-slingair/frontend/src/components/FlightContext.js\";\nimport React from \"react\";\nexport const FlightContext = React.createContext();\nconst initialState = {\n  flights: [],\n  status: \"loading\"\n};\n\nfunction reducer(state, action) {\n  console.log(\"action\", action);\n\n  switch (action.type) {\n    case \"loadFlights\":\n      {\n        return { ...state,\n          status: \"loaded\",\n          loadFlights: action.flightsName\n        };\n      }\n  }\n}\n\nconsole.log(\"uipdated initial\", initialState);\nexport const FlightProvider = ({\n  children\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState); //Functions\n\n  const getAllFlights = data => {\n    dispatch({\n      type: \"loadFlights\",\n      flightsName: data\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(FlightContext.Provider, {\n    value: {\n      state,\n      actions: {\n        getAllFlights\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mo/Concordia-bootcamp/day39-ProjectSlingair/project-slingair/frontend/src/components/FlightContext.js"],"names":["React","FlightContext","createContext","initialState","flights","status","reducer","state","action","console","log","type","loadFlights","flightsName","FlightProvider","children","dispatch","useReducer","getAllFlights","data","actions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGD,KAAK,CAACE,aAAN,EAAtB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGJ,KADE;AAELF,UAAAA,MAAM,EAAE,QAFH;AAGLO,UAAAA,WAAW,EAAEJ,MAAM,CAACK;AAHf,SAAP;AAKD;AAPH;AASD;;AAEDJ,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCP,YAAhC;AAEA,OAAO,MAAMW,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBhB,KAAK,CAACiB,UAAN,CAAiBX,OAAjB,EAA0BH,YAA1B,CAA1B,CAD8C,CAG9C;;AACA,QAAMe,aAAa,GAAIC,IAAD,IAAU;AAC9BH,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,aAAR;AAAuBE,MAAAA,WAAW,EAAEM;AAApC,KAAD,CAAR;AACD,GAFD;;AAGA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEZ,MAAAA,KAAF;AAASa,MAAAA,OAAO,EAAE;AAAEF,QAAAA;AAAF;AAAlB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD,CAZM","sourcesContent":["import React from \"react\";\n\nexport const FlightContext = React.createContext();\n\nconst initialState = {\n  flights: [],\n  status: \"loading\",\n};\n\nfunction reducer(state, action) {\n  console.log(\"action\", action);\n  switch (action.type) {\n    case \"loadFlights\": {\n      return {\n        ...state,\n        status: \"loaded\",\n        loadFlights: action.flightsName,\n      };\n    }\n  }\n}\n\nconsole.log(\"uipdated initial\", initialState);\n\nexport const FlightProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  //Functions\n  const getAllFlights = (data) => {\n    dispatch({ type: \"loadFlights\", flightsName: data });\n  };\n  return (\n    <FlightContext.Provider value={{ state, actions: { getAllFlights } }}>\n      {children}\n    </FlightContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}